[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.mypy]
strict = true
packages = ["httpd_manager", "tests"]
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ["pytest_docker.plugin"]
ignore_missing_imports = true

[tool.poetry]
name = "py-httpd-manager"
version = "0.3.1.dev1"
description = "interface with httpd's mod_status and mod_proxy_balancer management pages"
authors = ["Kyle Smith <smithk86@gmail.com>"]
license = "MIT"
repository = "https://github.com/smithk86/py-httpd-manager"
packages = [
    { include = "httpd_manager" }
]

[tool.poetry.dependencies]
python = ">=3.11,<4"
httpx = { version="*", optional=true }
beautifulsoup4 = "*"
dateparser = "*"
lxml = "*"
pydantic = ">=2"

[tool.poetry.extras]
httpx = ["httpx"]

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-asyncio = "*"
mypy = "*"
httpx = "*"
pytest-mypy = "*"
pytest-httpx = "*"
pytest-docker = "*"
types-beautifulsoup4 = "*"
types-dateparser = "*"

[tool.poetry.group.code.dependencies]
black = "*"
pre-commit = "*"

[tool.poetry.scripts]
pytest = "pytest:main"

[tool.pytest.ini_options]
addopts = "--mypy"
testpaths = ["tests"]

[tool.ruff]
target-version = 'py310'
select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D",   # pydocstyle
    "E",   # Error
    "F",   # pyflakes
    "I",   # isort
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    "PGH", # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q",   # flake8-quotes
    "S",   # bandit
    "SIM", # flake8-simplify
    "TRY", # tryceratops
    "UP",  # pyupgrade
    "W",   # Warning
    "YTT", # flake8-2020
]
exclude = ["__pycache__", "venv", ".venv"]
ignore = [
    "D100",   # missing docstring (public module)
    "D101",   # missing docstring (public class)
    "D102",   # missing docstring (public method)
    "D103",   # missing docstring (public functions)
    "D104",   #  missing docstring (public package)
    "D105",   # missing docstring (magic method
    "D106",   # missing docstring (public nested class)
    "D107",   # missing docstring (__init__)
    "D200",   # one-line docstring should fit on one line with quotes
    "D203",   # disable one-blank-line-before-class
    "D213",   # disable multi-line-summary-second-line
    "E402",   # module level import not at top of file
    "E501",   # ignore line length
    "TRY003", # overly strict about Exception messages
    "PGH003", # allow "type: ignore[rule]"
    "S105",
    "S106",
]
line-length = 120 # match Black

[tool.ruff.per-file-ignores]
"*test_*.py" = ["S101"]

[tool.ruff.pep8-naming]
staticmethod-decorators = ["pydantic.validator", "pydantic.root_validator"]
